// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Structure {
  id                           Int    @id @default(autoincrement())
  dnaCode                      String @unique
  operateur                    String
  type                         String
  nbPlaces                     Int
  adresse                      String
  codePostal                   String
  commune                      String
  departement                  String
  latitude                     Decimal
  longitude                    Decimal
  repartition                  Repartition
  nom                          String?
  debutConvention              DateTime
  finConvention                DateTime
  qpv                          Boolean
  cpom                         Boolean
  creationDate                 DateTime
  finessCode                   String
  lgbt                         Boolean
  fvv                          Boolean
  teh                          Boolean
  public                       String
  periodeAutorisationStart     DateTime
  periodeAutorisationEnd       DateTime
  cpomStart                    DateTime
  cpomEnd                      DateTime
  nbPlacesLibres               Int
  nbPlacesVacantes             Int
  controles                    Controle[]
  evaluations                  Evaluation[]
  evenementsIndesirablesGraves EvenementIndesirableGrave[]
  logements                    Logement[]
  places                       Place[]
  contacts                     Contact[]
}

model Controle {
  id               Int  @id @default(autoincrement())
  structure        Structure @relation(fields: [structureDnaCode], references: [dnaCode])
  structureDnaCode String
  date             DateTime
  type             ControleType
}

model Evaluation {
  id               Int  @id @default(autoincrement())
  structure        Structure @relation(fields: [structureDnaCode], references: [dnaCode])
  structureDnaCode String
  date             DateTime
  notePersonne     Int
  notePro          Int
  noteESSMS        Int
  note             Int
}

model EvenementIndesirableGrave {
  id               Int  @id @default(autoincrement())
  structure        Structure @relation(fields: [structureDnaCode], references: [dnaCode])
  structureDnaCode String
  numeroDossier    String
  evenementDate    DateTime
  declarationDate  DateTime
  type             EvenementIndesirableGraveType
}

model Logement {
  id               Int  @id @default(autoincrement())
  structure        Structure @relation(fields: [structureDnaCode], references: [dnaCode])
  structureDnaCode String
  adresse          String
  codePostal       String
  ville            String
  qpv              Boolean
  logementSocial   Boolean
  nbPlaces         Int
}

model Place {
  id               Int  @id @default(autoincrement())
  structure        Structure @relation(fields: [structureDnaCode], references: [dnaCode])
  structureDnaCode String
  nbPlacesTotal    Int
  year             DateTime
  pmr              Int
  qpv              Int
  logementSocial   Int
}

model Contact {
  id               Int  @id @default(autoincrement())
  structure        Structure @relation(fields: [structureDnaCode], references: [dnaCode])
  structureDnaCode String
  prenom           String
  nom              String
  telephone        String
  email            String
}

enum Repartition {
  DIFFUS
  COLLECTIF
  MIXTE
}

enum ControleType {
  INOPINE
  PROGRAMME
}

enum EvenementIndesirableGraveType {
  VOL
  COMPORTEMENT_VIOLENT
  PROBLEME_RH
}