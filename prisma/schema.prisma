// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Structure {
  id                           Int    @id @default(autoincrement())
  dnaCode                      String @unique
  operateur                    String
  type                         StructureType
  nbPlaces                     Int
  adresseAdministrative        String
  codePostalAdministratif      String
  communeAdministrative        String
  departementAdministratif     String
  latitude                     Decimal
  longitude                    Decimal
  nom                          String?
  debutConvention              DateTime
  finConvention                DateTime
  cpom                         Boolean
  creationDate                 DateTime
  finessCode                   String
  lgbt                         Boolean
  fvvTeh                       Boolean
  public                       PublicType
  periodeAutorisationStart     DateTime
  periodeAutorisationEnd       DateTime
  cpomStart                    DateTime
  cpomEnd                      DateTime
  controles                    Controle[]
  evaluations                  Evaluation[]
  evenementsIndesirablesGraves EvenementIndesirableGrave[]
  adresses                     Adresse[]
  contacts                     Contact[]
  pmrs                         Pmr[]
}

model Controle {
  id               Int  @id @default(autoincrement())
  structure        Structure @relation(fields: [structureDnaCode], references: [dnaCode])
  structureDnaCode String
  date             DateTime
  type             ControleType
}

model Evaluation {
  id               Int  @id @default(autoincrement())
  structure        Structure @relation(fields: [structureDnaCode], references: [dnaCode])
  structureDnaCode String
  date             DateTime
  notePersonne     Int
  notePro          Int
  noteStructure    Int
  note             Int
}

model EvenementIndesirableGrave {
  id               Int  @id @default(autoincrement())
  structure        Structure @relation(fields: [structureDnaCode], references: [dnaCode])
  structureDnaCode String
  numeroDossier    String
  evenementDate    DateTime
  declarationDate  DateTime
  type             EvenementIndesirableGraveType
}

model Adresse {
  id               Int  @id @default(autoincrement())
  structure        Structure @relation(fields: [structureDnaCode], references: [dnaCode])
  structureDnaCode String
  adresse          String
  codePostal       String
  commune          String
  repartition      Repartition
  typologies       Typologie[]
}

model Typologie {
  id               Int  @id @default(autoincrement())
  adresse          Adresse @relation(fields: [adresseId], references: [id])
  adresseId        Int
  nbPlacesTotal    Int
  date             DateTime
  qpv              Int
  logementSocial   Int
}

model Contact {
  id               Int  @id @default(autoincrement())
  structure        Structure @relation(fields: [structureDnaCode], references: [dnaCode])
  structureDnaCode String
  prenom           String
  nom              String
  telephone        String
  email            String
  role             String
}

model Pmr {
  id               Int  @id @default(autoincrement())
  structure        Structure @relation(fields: [structureDnaCode], references: [dnaCode])
  structureDnaCode String
  date             DateTime
  nbPlaces         Int
}

enum Repartition {
  DIFFUS
  COLLECTIF
  MIXTE
}

enum ControleType {
  INOPINE
  PROGRAMME
}

enum EvenementIndesirableGraveType {
  VOL
  COMPORTEMENT_VIOLENT
  PROBLEME_RH
}

enum PublicType {
  TOUT_PUBLIC
  FAMILLE
  PERSONNES_ISOLEES
}

enum StructureType {
  CADA
  HUDA 
  CPH 
  CAES
  PRAHDA
}