// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Structure {
  id                           Int    @id @default(autoincrement())
  dnaCode                      String @unique
  operateur                    String
  filiale                      String?
  type                         StructureType
  nbPlaces                     Int
  placesACreer                 Int?
  placesAFermer                Int?
  echeancePlacesACreer         DateTime?
  echeancePlacesAFermer        DateTime?
  adresseAdministrative        String
  codePostalAdministratif      String
  communeAdministrative        String
  departementAdministratif     String
  latitude                     Decimal
  longitude                    Decimal
  nom                          String?
  debutConvention              DateTime?
  finConvention                DateTime?
  cpom                         Boolean
  creationDate                 DateTime
  finessCode                   String?
  lgbt                         Boolean
  fvvTeh                       Boolean
  public                       PublicType
  debutPeriodeAutorisation     DateTime?
  finPeriodeAutorisation       DateTime?
  debutCpom                    DateTime?
  finCpom                      DateTime?
  notes                        String?
  controles                    Controle[]
  evaluations                  Evaluation[]
  evenementsIndesirablesGraves EvenementIndesirableGrave[]
  adresses                     Adresse[]
  contacts                     Contact[]
  structureTypologies          StructureTypologie[]
  activites                    Activite[]
  fileUploads                  FileUpload[]
}

model Controle {
  id               Int  @id @default(autoincrement())
  structure        Structure @relation(fields: [structureDnaCode], references: [dnaCode])
  structureDnaCode String
  date             DateTime
  type             ControleType
}

model Evaluation {
  id               Int  @id @default(autoincrement())
  structure        Structure @relation(fields: [structureDnaCode], references: [dnaCode])
  structureDnaCode String
  date             DateTime
  notePersonne     Int
  notePro          Int
  noteStructure    Int
  note             Int
}

model EvenementIndesirableGrave {
  id               Int  @id @default(autoincrement())
  structure        Structure @relation(fields: [structureDnaCode], references: [dnaCode])
  structureDnaCode String
  numeroDossier    String
  evenementDate    DateTime
  declarationDate  DateTime
  type             String
}

model Adresse {
  id                 Int  @id @default(autoincrement())
  structure          Structure @relation(fields: [structureDnaCode], references: [dnaCode])
  structureDnaCode   String
  adresse            String
  codePostal         String
  commune            String
  repartition        Repartition
  adresseTypologies  AdresseTypologie[]
}

model AdresseTypologie {
  id               Int  @id @default(autoincrement())
  adresse          Adresse @relation(fields: [adresseId], references: [id])
  adresseId        Int
  nbPlacesTotal    Int
  date             DateTime
  qpv              Int
  logementSocial   Int
}

model Contact {
  id               Int  @id @default(autoincrement())
  structure        Structure @relation(fields: [structureDnaCode], references: [dnaCode])
  structureDnaCode String
  prenom           String
  nom              String
  telephone        String
  email            String
  role             String
}

model StructureTypologie {
  id               Int  @id @default(autoincrement())
  structure        Structure @relation(fields: [structureDnaCode], references: [dnaCode])
  structureDnaCode String
  date             DateTime
  pmr              Int
  lgbt             Int
  fvvTeh           Int
}

model Activite {
  id                       Int  @id @default(autoincrement())
  structure                Structure @relation(fields: [structureDnaCode], references: [dnaCode])
  structureDnaCode         String
  date                     DateTime
  nbPlaces                 Int
  desinsectisation         Int
  remiseEnEtat             Int
  sousOccupation           Int
  travaux                  Int
  placesIndisponibles      Int
  placesVacantes           Int	
  presencesInduesBPI       Int	
  presencesInduesDeboutees Int
}

model FileUpload {
  id                       Int  @id @default(autoincrement())
  structure                Structure? @relation(fields: [structureDnaCode], references: [dnaCode])
  structureDnaCode         String?
  key                      String @unique
  mimeType                 String
  fileSize                 Int
  originalName             String
  date                     DateTime?
  category                 FileUploadCategory?
}

enum Repartition {
  DIFFUS
  COLLECTIF
  MIXTE
}

enum ControleType {
  INOPINE
  PROGRAMME
}

enum PublicType {
  TOUT_PUBLIC
  FAMILLE
  PERSONNES_ISOLEES
}

enum StructureType {
  CADA
  HUDA 
  CPH 
  CAES
  PRAHDA
}

enum FileUploadCategory {
  BUDGET_PREVISIONNEL_DEMANDE
  RAPPORT_BUDGETAIRE
  BUDGET_PREVISIONNEL_RETENU
  BUDGET_RECTIFICATIF
  COMPTE_ADMINISTRATIF_SOUMIS
  RAPPORT_ACTIVITE
  COMPTE_ADMINISTRATIF_RETENU
  DEMANDE_SUBVENTION
  COMPTE_RENDU_FINANCIER
  RAPPORT_ACTIVITE_OPERATEUR
}